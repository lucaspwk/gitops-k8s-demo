{
  "version": 4,
  "terraform_version": "1.10.2",
  "serial": 10,
  "lineage": "f06f111b-4390-7d73-a160-8d83d1e35357",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-cd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v2.8.3",
              "chart": "argo-cd",
              "first_deployed": 1754416733,
              "last_deployed": 1754416733,
              "name": "argo-cd",
              "namespace": "argocd",
              "notes": "\n\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
              "revision": 1,
              "values": "{\"configs\":{\"params\":{\"server.insecure\":true}},\"crds\":{\"install\":true},\"fullnameOverride\":\"argocd\"}",
              "version": "5.46.2"
            },
            "name": "argo-cd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\r\nfullnameOverride: argocd\r\ncrds:\r\n  install: true\r\n#\r\nconfigs:\r\n  params:\r\n    server.insecure: true\r\n"
            ],
            "verify": false,
            "version": "5.46.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "dependencies": [
            "kubernetes_namespace.namespace",
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd",
                "resource_version": "283",
                "uid": "8600da30-41ae-4798-9652-d07d7d0ffaa6"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        }
      ]
    },
    {
      "module": "module.minikube_cluster",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "deployment",
      "provider": "module.minikube_cluster.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/nginx-example",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "App": "NginxExample"
                },
                "name": "nginx-example",
                "namespace": "default",
                "resource_version": "599",
                "uid": "2b5d5609-c4d9-467b-b876-e8eaf4b99def"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "2",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "App": "NginxExample"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "App": "NginxExample"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [],
                            "env_from": [],
                            "image": "nginx:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "example",
                            "port": [
                              {
                                "container_port": 80,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "512Mi"
                                },
                                "requests": {
                                  "cpu": "250m",
                                  "memory": "50Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        }
      ]
    },
    {
      "module": "module.minikube_cluster",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "namespaces",
      "provider": "module.minikube_cluster.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "monitoring",
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "purpose": "monitoring"
                },
                "name": "monitoring",
                "resource_version": "284",
                "uid": "1441dc00-b7fa-4801-8b0e-47daf435cff2"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        },
        {
          "index_key": "production-external",
          "schema_version": 0,
          "attributes": {
            "id": "production-external",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "environment": "production",
                  "visibility": "external"
                },
                "name": "production-external",
                "resource_version": "282",
                "uid": "51287573-d855-4b8e-9ae8-65e63a7167ad"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        },
        {
          "index_key": "production-internal",
          "schema_version": 0,
          "attributes": {
            "id": "production-internal",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "environment": "production",
                  "visibility": "internal"
                },
                "name": "production-internal",
                "resource_version": "281",
                "uid": "6fdc8ed4-1fb2-4498-94a1-299248dedf5b"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        },
        {
          "index_key": "staging-external",
          "schema_version": 0,
          "attributes": {
            "id": "staging-external",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "environment": "staging",
                  "visibility": "external"
                },
                "name": "staging-external",
                "resource_version": "280",
                "uid": "e71f57cb-b819-4711-b3ba-758a6cd55237"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        },
        {
          "index_key": "staging-internal",
          "schema_version": 0,
          "attributes": {
            "id": "staging-internal",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "environment": "staging",
                  "visibility": "internal"
                },
                "name": "staging-internal",
                "resource_version": "285",
                "uid": "a869f0c6-293a-44f8-a16d-0149be6ae78e"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.minikube_cluster.minikube_cluster.docker"
          ]
        }
      ]
    },
    {
      "module": "module.minikube_cluster",
      "mode": "managed",
      "type": "minikube_cluster",
      "name": "docker",
      "provider": "module.minikube_cluster.provider[\"registry.terraform.io/scott-the-programmer/minikube\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "addons": [
              "default-storageclass",
              "storage-provisioner"
            ],
            "apiserver_ips": [],
            "apiserver_name": "minikubeCA",
            "apiserver_names": [],
            "apiserver_port": 8443,
            "auto_pause_interval": 1,
            "auto_update_drivers": true,
            "base_image": "gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279",
            "binary_mirror": null,
            "cache_images": true,
            "cert_expiration": 1576800,
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDITCCAgmgAwIBAgIBAjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwptaW5p\na3ViZUNBMB4XDTI1MDgwNDE3NTgyN1oXDTI4MDgwNDE3NTgyN1owMTEXMBUGA1UE\nChMOc3lzdGVtOm1hc3RlcnMxFjAUBgNVBAMTDW1pbmlrdWJlLXVzZXIwggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDH206hREiKhY6IpKe661D6dFghzo7i\n5OtihVAs60FWxiJU24Yjz7XDd7QIOQrbn7OPDKv6DkzANQTYc/PUmYxXMeMWeTqr\ne5N1jisODfobVIJ6I8przAg1mgQvjHUJi0GrNxPVDOXX4YABLkn2O7FVuByQD1P+\nz6tVC+MYDaa10yUStVpAcifInS44Z/S6K+WmYonxCywwDDx6nPE0+iy1fCRp2Bpa\nNSo2J1CYsasgVojI+ZX5tJaV6JnaOkFmtqGfK4R0F2Bc/hD9NUsBVIkCaaNB2ZFL\n2QD1bawEGBRoZ6/z5e5FbQrK8PWxeOYVrdG8lDNhGEk9YQ8U/HzKZAOHAgMBAAGj\nYDBeMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBT4zho6IX5xPJyLeFpHORLHJQ42\nqDANBgkqhkiG9w0BAQsFAAOCAQEAoHaR7mn7Q4ESNWC8j2FnpmfWrgagRcATs1t1\nH9KX9y2MnfdlyXJ1Sr94jeS7ct/gTe8i62YC2ybr+4RKgNPtivPkvO8jE0Hn9uxe\n01l/6Hw/xSOExVv6Itqx8oBxDlktLvKrISorP0bfD+mKD94ifLHv4I5iXgVNqfxZ\nO86HlQ94Co1B135BWZMVR0TaFjo1cIL3Os9eBQUKQq5ZYDEvIDL40vhhU5MbKt9O\nFu9mL7IAyp02TODMsCmaKvgf8GOfAKZnJuoRJKMckGWMmh2HruqJpXyFdiAnj3OH\njpmeROptzeqxOz20QFO55ghPWcqKS+pn2zeiQDp/kkpcDIB00g==\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAx9tOoURIioWOiKSnuutQ+nRYIc6O4uTrYoVQLOtBVsYiVNuG\nI8+1w3e0CDkK25+zjwyr+g5MwDUE2HPz1JmMVzHjFnk6q3uTdY4rDg36G1SCeiPK\na8wINZoEL4x1CYtBqzcT1Qzl1+GAAS5J9juxVbgckA9T/s+rVQvjGA2mtdMlErVa\nQHInyJ0uOGf0uivlpmKJ8QssMAw8epzxNPostXwkadgaWjUqNidQmLGrIFaIyPmV\n+bSWleiZ2jpBZrahnyuEdBdgXP4Q/TVLAVSJAmmjQdmRS9kA9W2sBBgUaGev8+Xu\nRW0KyvD1sXjmFa3RvJQzYRhJPWEPFPx8ymQDhwIDAQABAoIBAFUKYfJoGk/rFaPa\nIE7+m2X/BJNaD93HF8vDu0Jp1lMkmu4tvO3XD9o9QLtw/khGs8JuW21bEViGFuo9\nqKaxsZBWt3DUI91dB3lxhauE0gQ4GQ781MC6wFGCmD5dT13AxjAjDwrMYq7SEsQt\n3KXsb4Bwh6LbCtw1pItbNAYDpQjfr3ruSXl2jJcKUCoSK0RBQM9BAorWdhEX2ZCr\nBYm1hR6XRBkb+cJZNbfTwG8Wvt23aRNjgWpYi2EoSYM1kG8YCNcBOaucUCgSkEXX\n5HmXK34OCQ/SbZJjqB5JCDSm37/qhki84koRfGLkcIGEtQgH6zGk0Zg9dM/rnI0v\nnF12gfECgYEA4aLpqtLG7cFjIDhq32N0Fl0+qdl+/THeHC7qphGvpKLH57zTPc02\ntYEt5hMpLth46OLa9b904VLzwTxMno+OFiQG0dCWsHdWjljA/BntMH15TGFd5sMf\nSbUJEbkPI1n1I6VmBLtlU2umxLuMjgvs7KImAsb6uDAeL+0o/gyd+BcCgYEA4sBL\nEG6QTj3ug71wcQxffzGyJmKakv7Xh3Oz0MUfF9BGBiI03FiHuGL7luGUflCAaquM\nz7xaj/FVvFLvgeyC8jlYOCaI2IGUk+3oOgPL24ta/gm/YRq5IgCj/uoGGMHwMHLO\nJ1uzTSfFNa8lw8hKdyOjTuHGT0AM93KpHDhaBhECgYA/4DfYRS1Nt3aRc4dF0EjX\n3/PSb6EUmp5vShThiJY5vF9tSjZfA45eWcCdpoT9HwkznK0x7s5uz2X0KVbjeG5X\n9ED9+tf+Avq894FCnTBZjtvc9J95qXldC2QS4VnYvym3uqYj5s0rjYk7noCO4e9j\nmg+6r4vgwrZ5COGW8glyZwKBgBHO3lZVCJpMfN31083dFebsZTxkhBVFVHH74URl\nJtL89XLn3tTrUwVlKLMp1jqxYdR+0plCBq7FWmFm9g5zH7mcTVRjml2+l4eiqJld\n0PXWFPhclZ4vthh4imirwnzRRmbXrV8j8Yn+tJtJvSKKKWb/8oRwcN2qfxoz9BoW\nRuOxAoGAaUkkWyjXjRHAdcpHMjBcZCzoWg1aZWvB+NnoW+lFEBYb2S/66IaHnSn9\nAygLYzc2R9Tdb3JVSHJSzuQvCbkNtIWggEQ7uE4gTPufOjT/vkv5Sz1/iP4dNeRZ\nkdnUkuFeT5EzO0cV4Rpc8dQ0KfR4Q3gN99nASfecmu5n0SKXhco=\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBjCCAe6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwptaW5p\na3ViZUNBMB4XDTI1MDgwMzExMTkzMFoXDTM1MDgwMjExMTkzMFowFTETMBEGA1UE\nAxMKbWluaWt1YmVDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKpI\n+kEBpHEpvH/l5SCN84+5MSEDhiDX5Q3X2sbR/ywVH2iPwBt495fp/BbHzY8SzQry\nYBIJ95fNWf0qpx70S/9bx3kDGqIz+/AT9jcBrv7WAMFwQLgvuJOOGa8aedJpWJ4G\nzusuHuIUjUt2MiqVkSkvfIFpf+bcUzXz+4E903Hb9+hWvpne7jDUNVFJb39BbovD\nSvbP4Rvz+7Lz1iPwfmw8Iq0/gEmFG9eFH2JlUUH1plbdK9pO+7Rr4/Pe/xfkUbnA\nFVxdTNc/IdHIQlFMIXPKDFLHtV4LVtq8Len1tcffGDulYbC7TF/Ek6kuRqLacH1n\noJZ9fQEfTkpptg81tNkCAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQW\nMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBT4zho6IX5xPJyLeFpHORLHJQ42qDANBgkqhkiG9w0BAQsFAAOCAQEAOua2lOrL\n7whtyG6sPZhfUCv53/Ki3ok+F7q7oZ/L7AnjwUqnl3gffwsR3B9DyPsrtwFoUef6\nuRPHWIWD+SFp3cD7Np9sCrf79pgHaw1TiBCsJyIPFh4aOHQHNDTTIcpuEgNSTDrI\ngcnT5wQIhyKdDZt3IOwMuL4f2KVpajTjZetAYK10dTyNxCirM31aBRQxdeL86+CX\nvvf0uVuYmIgtz7zUQnQqKnLwkz2lZ/ZjMnedSAO8Y1yWBxCuFtXEuORuYy089vaX\nUtvHSv6iN4vq2kUXyYgaH0GmP/LHMvI9d8JYY4uWNguFPjhNOxYy29tJ38ADHroA\nL6fOajpEI8zeWQ==\n-----END CERTIFICATE-----\n",
            "cluster_name": "minikube-hostaway",
            "cni": "",
            "container_runtime": "docker",
            "cpus": "2",
            "cri_socket": "",
            "delete_on_failure": false,
            "disable_driver_mounts": false,
            "disable_metrics": false,
            "disable_optimizations": false,
            "disk_size": "20000mb",
            "dns_domain": "cluster.local",
            "dns_proxy": false,
            "docker_env": null,
            "docker_opt": null,
            "download_only": false,
            "driver": "docker",
            "dry_run": false,
            "embed_certs": false,
            "enable_default_cni": false,
            "extra_config": null,
            "extra_disks": 0,
            "feature_gates": "",
            "force": false,
            "force_systemd": false,
            "gpus": null,
            "ha": false,
            "host": "https://127.0.0.1:52412",
            "host_dns_resolver": true,
            "host_only_cidr": "192.168.59.1/24",
            "host_only_nic_type": "virtio",
            "hyperkit_vpnkit_sock": "",
            "hyperkit_vsock_ports": [],
            "hyperv_external_adapter": "",
            "hyperv_use_external_switch": false,
            "hyperv_virtual_switch": "",
            "id": "minikube-hostaway",
            "image_mirror_country": null,
            "image_repository": "",
            "insecure_registry": [],
            "install_addons": true,
            "interactive": true,
            "iso_url": [
              "https://github.com/kubernetes/minikube/releases/download/v1.35.0/minikube-v1.35.0-amd64.iso"
            ],
            "keep_context": false,
            "kubernetes_version": null,
            "kvm_gpu": false,
            "kvm_hidden": false,
            "kvm_network": "default",
            "kvm_numa_count": 1,
            "kvm_qemu_uri": "qemu:///system",
            "listen_address": "",
            "memory": "4096mb",
            "mount": false,
            "mount_9p_version": "9p2000.L",
            "mount_gid": "docker",
            "mount_ip": null,
            "mount_msize": 262144,
            "mount_options": null,
            "mount_port": 0,
            "mount_string": "C:\\Users\\Lucas:/minikube-host",
            "mount_type": "9p",
            "mount_uid": "docker",
            "namespace": "default",
            "nat_nic_type": "virtio",
            "native_ssh": true,
            "network": "",
            "network_plugin": null,
            "nfs_share": [],
            "nfs_shares_root": "/nfsshares",
            "no_kubernetes": false,
            "no_vtx_check": false,
            "nodes": 1,
            "output": "text",
            "ports": [],
            "preload": true,
            "qemu_firmware_path": null,
            "registry_mirror": [],
            "service_cluster_ip_range": "10.96.0.0/12",
            "socket_vmnet_client_path": "/usr/local/opt/socket_vmnet/bin/socket_vmnet_client",
            "socket_vmnet_path": "/usr/local/var/run/socket_vmnet",
            "ssh_ip_address": "",
            "ssh_key": "",
            "ssh_port": 22,
            "ssh_user": "root",
            "static_ip": null,
            "subnet": null,
            "trace": null,
            "uuid": "",
            "vm": false,
            "vm_driver": null,
            "wait": null,
            "wait_timeout": 6
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_certificate"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "cluster_ca_certificate"
              }
            ]
          ],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "resource",
      "config_addr": "helm_release.argocd",
      "status": "pass",
      "objects": [
        {
          "object_addr": "helm_release.argocd",
          "status": "pass"
        }
      ]
    }
  ]
}
